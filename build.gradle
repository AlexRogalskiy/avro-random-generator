apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
apply plugin: 'maven'

sourceCompatibility = 1.8
version = '0.1-SNAPSHOT'

jar {
    manifest {
        attributes  'Implementation-Title': 'Avro Random Generator',
                    'Implementation-Version': version
    }
}

// Copied from http://stackoverflow.com/questions/4871656/using-gradle-to-build-a-jar-with-dependencies
task distribute(type: Jar) {
    destinationDir file("$rootDir/bin")
    archiveName 'arg.jar'
    from {
        (configurations.runtime).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    manifest {
        attributes 'Main-Class': 'io.confluent.avro.random.generator.Main'
    }
    with jar
}

clean.doLast {
    new File("$rootDir/bin").deleteDir()
}

repositories {
    jcenter()
    maven {
        url 'https://nexus.confluent.io/repository/maven-snapshots/'
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            def userName = findProperty('nexusUsername') ?: ''
            def password = findProperty('nexusPassword') ?: ''
            snapshotRepository(url: 'https://nexus.confluent.io/repository/maven-snapshots/') {
                authentication(userName: userName, password: password)
            }
            repository(url: 'https://nexus.confluent.io/repository/maven-public/') {
                authentication(userName: userName, password: password)
            }
            pom.groupId = 'io.confluent.avro'
            pom.artifactId = 'random-generator'
            pom.version = project.version
        }
    }
}

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'

    compile group: 'org.apache.avro', name: 'avro', version: '1.8.1'

    compile group: 'com.github.mifmif', name: 'generex', version: '1.0.1'

    compile group: 'com.google.code.findbugs', name: 'annotations', version: '3.0.1'

    ////////////////////////////////////////////////////////////////

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

checkstyle {
    configFile = file("${project.rootDir}/config/checkstyle/google_checks.xml")
    toolVersion = '6.18'
}

javadoc {
    options.links 'https://docs.oracle.com/javase/8/docs/api/'
    options.links 'https://avro.apache.org/docs/1.8.1/api/java/'
}